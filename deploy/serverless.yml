# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
plugins:
  - serverless-pseudo-parameters
  - serverless-latest-layer-version
  - serverless-deployment-bucket
custom:
  customStage: ${opt:stage, self:provider.stage}
  alarmTopicArn: arn:aws:sns:us-east-2:771497881438:DevOpsEmails
  function:
    name: ${self:service}-${opt:stage, self:provider.stage}-handler
  object_resource:
    s3_bucket_name: cv-etl-datawarehouse-${opt:stage, self:provider.stage}-dms-events

service: cv-reload-athena-partition
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
provider:
  name: aws
  runtime: python3.7
  timeout: 120
  memorySize: 2560
  deploymentBucket:
    name: data-engineer-serverless-deployment-${opt:stage, self:provider.stage}
    serverSideEncryption: AES256
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'athena:StartQueryExecution'
        - 's3:GetBucketLocation'
        - 's3:PutObject'
        - 's3:GetObject'
        - 's3:ListBucket'
        - 'glue:GetDatabase'
        - 'glue:BatchCreatePartition'
        - 'athena:GetQueryExecution'
        - 'glue:GetTable'
        - 'glue:GetPartitions'
      Resource:
        - '*'    
    - Effect: 'Allow'
      Action:    
        - kms:List* 
        - kms:Get* 
        - kms:GenerateDataKey*
        - kms:Decrypt
        - kms:Encrypt
      Resource:
        - arn:aws:kms:us-east-2:#{AWS::AccountId}:key/a1b9f8ca-f198-4a96-a5c9-2dcae4491155
# you can overwrite defaults here
  stage: develop
  region: us-east-2

functions:
  handler:
    handler: lambda_function.lambda_handler
    name: ${self:custom.function.name}
    description: Lambda function to reaload or add new athena partitions
    layers:
      - arn:aws:lambda:us-east-2:#{AWS::AccountId}:layer:Data-Engineer-Dependencies:latest
    events:
      - schedule: cron(30 0 * * ? *)
#    Define function environment variables here
    environment:
      file_name: cv-reload-athena-partition

# you can add CloudFormation resource templates here
resources:
  Resources:
    CloudWatchAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        MetricName: Errors
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        Namespace: AWS/Lambda
        Statistic: Maximum
        Threshold: 0
        AlarmActions:
          - ${self:custom.alarmTopicArn}
        AlarmDescription: Notifies when a Error was presented for the namespace '${self:custom.customStage}'
        AlarmName: "${self:custom.customStage} - Lambda: ${self:custom.function.name} - Errors"
        TreatMissingData: notBreaching
        Dimensions:
        - Name: FunctionName
          Value: ${self:custom.function.name}